// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cque.proto

package cque

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetFileRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileRequest) Reset()         { *m = GetFileRequest{} }
func (m *GetFileRequest) String() string { return proto.CompactTextString(m) }
func (*GetFileRequest) ProtoMessage()    {}
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3ed3381f6ff7641, []int{0}
}

func (m *GetFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileRequest.Unmarshal(m, b)
}
func (m *GetFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileRequest.Marshal(b, m, deterministic)
}
func (m *GetFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileRequest.Merge(m, src)
}
func (m *GetFileRequest) XXX_Size() int {
	return xxx_messageInfo_GetFileRequest.Size(m)
}
func (m *GetFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileRequest proto.InternalMessageInfo

func (m *GetFileRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GetFileResponce struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileResponce) Reset()         { *m = GetFileResponce{} }
func (m *GetFileResponce) String() string { return proto.CompactTextString(m) }
func (*GetFileResponce) ProtoMessage()    {}
func (*GetFileResponce) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3ed3381f6ff7641, []int{1}
}

func (m *GetFileResponce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileResponce.Unmarshal(m, b)
}
func (m *GetFileResponce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileResponce.Marshal(b, m, deterministic)
}
func (m *GetFileResponce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileResponce.Merge(m, src)
}
func (m *GetFileResponce) XXX_Size() int {
	return xxx_messageInfo_GetFileResponce.Size(m)
}
func (m *GetFileResponce) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileResponce.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileResponce proto.InternalMessageInfo

func (m *GetFileResponce) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*GetFileRequest)(nil), "cque.GetFileRequest")
	proto.RegisterType((*GetFileResponce)(nil), "cque.GetFileResponce")
}

func init() { proto.RegisterFile("cque.proto", fileDescriptor_a3ed3381f6ff7641) }

var fileDescriptor_a3ed3381f6ff7641 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2e, 0x2c, 0x4d,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xd4, 0xb8, 0xf8, 0xdc, 0x53,
	0x4b, 0xdc, 0x32, 0x73, 0x52, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58,
	0x0b, 0x4b, 0x53, 0x8b, 0x2a, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x25, 0x4d,
	0x2e, 0x7e, 0xb8, 0xba, 0xe2, 0x82, 0xfc, 0xbc, 0xe4, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4,
	0xe2, 0xd2, 0x9c, 0x12, 0xa8, 0x4a, 0x28, 0xcf, 0xc8, 0x8e, 0x8b, 0xc5, 0xb9, 0xb4, 0x30, 0x55,
	0xc8, 0x8c, 0x8b, 0x1d, 0xaa, 0x45, 0x48, 0x44, 0x0f, 0x6c, 0x31, 0xaa, 0x4d, 0x52, 0xa2, 0x68,
	0xa2, 0x10, 0x73, 0x93, 0xd8, 0xc0, 0xee, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x33, 0xb7,
	0x28, 0xe3, 0xad, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CuqeClient is the client API for Cuqe service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CuqeClient interface {
	GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponce, error)
}

type cuqeClient struct {
	cc *grpc.ClientConn
}

func NewCuqeClient(cc *grpc.ClientConn) CuqeClient {
	return &cuqeClient{cc}
}

func (c *cuqeClient) GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponce, error) {
	out := new(GetFileResponce)
	err := c.cc.Invoke(ctx, "/cque.Cuqe/GetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CuqeServer is the server API for Cuqe service.
type CuqeServer interface {
	GetFile(context.Context, *GetFileRequest) (*GetFileResponce, error)
}

// UnimplementedCuqeServer can be embedded to have forward compatible implementations.
type UnimplementedCuqeServer struct {
}

func (*UnimplementedCuqeServer) GetFile(ctx context.Context, req *GetFileRequest) (*GetFileResponce, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFile not implemented")
}

func RegisterCuqeServer(s *grpc.Server, srv CuqeServer) {
	s.RegisterService(&_Cuqe_serviceDesc, srv)
}

func _Cuqe_GetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CuqeServer).GetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cque.Cuqe/GetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CuqeServer).GetFile(ctx, req.(*GetFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cuqe_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cque.Cuqe",
	HandlerType: (*CuqeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFile",
			Handler:    _Cuqe_GetFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cque.proto",
}
